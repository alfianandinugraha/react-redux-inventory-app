{"version":3,"sources":["store/Product/Store.ts","store/Product/Reducers.ts","store/index.ts","components/ProductItem.tsx","store/Product/Actions.ts","components/ProductList.tsx","components/ProductForm.tsx","App.tsx","index.tsx"],"names":["initialProducts","products","foodReducer","store","action","type","product","payload","id","filter","map","stock","createStore","ProductItem","props","dispatcher","useDispatch","Card","CardContent","Grid","Typography","name","variant","container","style","marginTop","justifyContent","item","ButtonGroup","Button","color","onClick","Remove","fontSize","Add","Delete","ProductList","useSelector","state","spacing","xs","connect","dispatch","addProduct","useState","setName","setStock","direction","TextField","label","value","onChange","e","target","nanoid","console","log","App","Container","maxWidth","Box","mb","mt","ReactDOM","render","StrictMode","document","getElementById","undefined"],"mappings":"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","file":"static/js/main.ffd18c08.chunk.js","sourcesContent":["import { ProductStore } from 'ProductStore'\r\n\r\nconst initialProducts: ProductStore = {\r\n  products: [],\r\n}\r\n\r\nexport { initialProducts }\r\n","import { initialProducts } from '@/store/Product/Store'\r\nimport { ProductAction, ProductStore } from 'ProductStore'\r\nimport { Product } from 'state'\r\n\r\nconst foodReducer = (\r\n  store: ProductStore = initialProducts,\r\n  action: ProductAction\r\n): ProductStore => {\r\n  switch (action.type) {\r\n    case 'ADD_PRODUCT': {\r\n      const product = action.payload.product as Product\r\n      return {\r\n        products: [product, ...store.products],\r\n      }\r\n    }\r\n    case 'DELETE_PRODUCT': {\r\n      const id = action.payload.id || ''\r\n      return {\r\n        products: store.products.filter((product) => product.id !== id),\r\n      }\r\n    }\r\n    case 'INCREMENT_PRODUCT': {\r\n      const id = action.payload.id || ''\r\n      return {\r\n        products: store.products.map((product) => {\r\n          return {\r\n            ...product,\r\n            stock: product.id === id ? product.stock + 1 : product.stock,\r\n          }\r\n        }),\r\n      }\r\n    }\r\n    case 'DECREMENT_PRODUCT': {\r\n      const id = action.payload.id || ''\r\n      return {\r\n        products: store.products.map((product) => {\r\n          return {\r\n            ...product,\r\n            stock:\r\n              product.id === id && product.stock > 0\r\n                ? product.stock - 1\r\n                : product.stock,\r\n          }\r\n        }),\r\n      }\r\n    }\r\n    default: {\r\n      return {\r\n        products: store.products,\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default foodReducer\r\n","import { createStore } from 'redux'\r\nimport foodReducer from '@/store/Product/Reducers'\r\n\r\nconst store = createStore(foodReducer)\r\n\r\nexport default store\r\n","import { Product } from 'state'\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { Add, Delete, Remove } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  decrementProduct,\r\n  deleteProduct,\r\n  incrementProduct,\r\n} from '@/store/Product/Actions'\r\n\r\ninterface ProductItemProps extends Product {}\r\n\r\nconst ProductItem = (props: ProductItemProps) => {\r\n  const dispatcher = useDispatch()\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid>\r\n          <Typography>{props.name}</Typography>\r\n          <Typography variant=\"caption\">Stock {props.stock}</Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          style={{ marginTop: 16 }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <ButtonGroup>\r\n              <Button\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  dispatcher(decrementProduct(props.id))\r\n                }}\r\n              >\r\n                <Remove style={{ fontSize: 16 }} />\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  dispatcher(incrementProduct(props.id))\r\n                }}\r\n              >\r\n                <Add style={{ fontSize: 16 }} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n          <Grid item>\r\n            <ButtonGroup>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  dispatcher(deleteProduct(props.id))\r\n                }}\r\n              >\r\n                <Delete style={{ fontSize: 16 }} />\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ProductItem\r\n","import { Product } from 'state'\r\nimport { ProductAction } from 'ProductStore'\r\n\r\nconst addProduct = (product: Product): ProductAction => {\r\n  return {\r\n    type: 'ADD_PRODUCT',\r\n    payload: { product },\r\n  }\r\n}\r\n\r\nconst deleteProduct = (id: string): ProductAction => {\r\n  return {\r\n    type: 'DELETE_PRODUCT',\r\n    payload: {\r\n      id,\r\n    },\r\n  }\r\n}\r\n\r\nconst incrementProduct = (id: string): ProductAction => {\r\n  return {\r\n    type: 'INCREMENT_PRODUCT',\r\n    payload: { id },\r\n  }\r\n}\r\n\r\nconst decrementProduct = (id: string): ProductAction => {\r\n  return {\r\n    type: 'DECREMENT_PRODUCT',\r\n    payload: { id },\r\n  }\r\n}\r\n\r\nexport { addProduct, deleteProduct, incrementProduct, decrementProduct }\r\n","import { Grid } from '@material-ui/core'\r\nimport ProductItem from '@/components/ProductItem'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Store } from 'store'\r\n\r\nconst ProductList = () => {\r\n  const products = useSelector((state: Store) => state.products)\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {products.map((product) => {\r\n        return (\r\n          <Grid item key={product.id} xs={3}>\r\n            <ProductItem {...product} />\r\n          </Grid>\r\n        )\r\n      })}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ProductList\r\n","import { Button, Grid, TextField } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { Product } from 'state'\r\nimport { addProduct } from '@/store/Product/Actions'\r\nimport { connect } from 'react-redux'\r\nimport { nanoid } from 'nanoid'\r\nimport { ProductAction } from 'ProductStore'\r\n\r\ninterface ProductFormProps {\r\n  addProduct: (product: Product) => void\r\n}\r\n\r\nconst ProductForm = (props: ProductFormProps) => {\r\n  const [name, setName] = useState('')\r\n  const [stock, setStock] = useState('')\r\n\r\n  return (\r\n    <Grid container spacing={2} direction=\"column\">\r\n      <Grid item>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <TextField\r\n              type=\"text\"\r\n              label=\"Product Name\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value)\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              type=\"number\"\r\n              label=\"Product Stock\"\r\n              value={stock}\r\n              onChange={(e) => {\r\n                setStock(e.target.value)\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            const payload = {\r\n              name,\r\n              stock: +stock,\r\n            }\r\n            props.addProduct({\r\n              id: nanoid(),\r\n              ...payload,\r\n            })\r\n            console.log(payload)\r\n          }}\r\n        >\r\n          Add product\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: (action: ProductAction) => void) => {\r\n  return {\r\n    addProduct: (product: Product) => dispatch(addProduct(product)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductForm)\r\n","import React from 'react'\nimport { Box, Container, Typography } from '@material-ui/core'\nimport ProductList from '@/components/ProductList'\nimport ProductForm from '@/components/ProductForm'\n\nconst App = (): React.ReactElement => {\n  return (\n    <Container maxWidth=\"md\">\n      <Box mb={3}>\n        <Typography variant=\"h4\">Inventory App</Typography>\n        <Typography>Example React - Redux App</Typography>\n      </Box>\n      <ProductForm />\n      <Box mt={4}>\n        <ProductList />\n      </Box>\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport store from '@/store'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n  undefined\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}